name: KDL Runner Docker Image Builder

on:
  push:

jobs:
  # lint-project-operator-dockerfile:
  #   name: Linter
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Extract branch name
  #     shell: bash
  #     run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
  #     id: extract_branch
  #   - name: Lint the Dockerfile
  #     uses: luke142367/Docker-Lint-Action@v1.0.0
  #     with:
  #       target: docker-images//Dockerfile
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # dockerfile-vuln-scan:
  #   name: Vulnerability Scan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Build an image from Dockerfile
  #       run: |
  #         docker build -t konstellation/my-app:v0.14.0--alpha.4  ${{ github.sha }} docker-images//Dockerfile
  #     - name: Aqua Security Trivy
  #       uses: aquasecurity/trivy-action@0.0.20
  #       with:
  #         scan-type: 'image'
  #         image-ref: 'konstellation/my-app:${{ github.sha }} docker-images//Dockerfile'
  #         exit-code: 0
  #         ignore-unfixed: false
  #         vuln-type: 'os,library'
  #         severity: 'HIGH,CRITICAL'
  #         format: 'template'
  #         template: '@/contrib/sarif.tpl'
  #         output: vuln-scan-report.sarif
  #         cache-dir: .trivycache/
  #         hide-progress: true
  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v1
  #       with:
  #         sarif_file: 'vuln-scan-report.sarif'

  build-kdl-runners:
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v2
        # with:
        #   fetch-depth: 0  
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Build
        run: |
          docker build  -f  kdl-py/Dockerfile kdl-py/

      # - name: Login to DockerHub Registry
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Get Version
      #   id: get_version
      #   run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      # - name: Push to Docker Hub
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./app
      #     file: ./app/Dockerfile
      #     platforms: linux/amd64
      #     push: true
      #     tags: |
      #       konstellation/kdl-server:${{ steps.get_version.outputs.VERSION }}
      #       konstellation/kdl-server:latest
